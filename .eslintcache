[{"/home/kostya/Документы/coding/react/TS/convertor/src/index.tsx":"1","/home/kostya/Документы/coding/react/TS/convertor/src/App.tsx":"2","/home/kostya/Документы/coding/react/TS/convertor/src/reportWebVitals.ts":"3","/home/kostya/Документы/coding/react/TS/convertor/src/redux/store.ts":"4","/home/kostya/Документы/coding/react/TS/convertor/src/api/api.ts":"5","/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorReducer.ts":"6","/home/kostya/Документы/coding/react/TS/convertor/src/components/Rate/Rate.tsx":"7","/home/kostya/Документы/coding/react/TS/convertor/src/components/CurrencyRow/CurrencyRow.tsx":"8","/home/kostya/Документы/coding/react/TS/convertor/src/components/Calc/Calc.tsx":"9","/home/kostya/Документы/coding/react/TS/convertor/src/components/TableCurrency/TableCurrency.tsx":"10","/home/kostya/Документы/coding/react/TS/convertor/src/components/HistoricalRates/HistoricalRates.tsx":"11","/home/kostya/Документы/coding/react/TS/convertor/src/Validators/validate.ts":"12","/home/kostya/Документы/coding/react/TS/convertor/src/FormControls/Input.tsx":"13","/home/kostya/Документы/coding/react/TS/convertor/src/components/About/About.tsx":"14","/home/kostya/Документы/coding/react/TS/convertor/src/components/NavbarComponent/NavbarComponent.tsx":"15","/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorAC.ts":"16","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/index.ts":"17","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getHistoricalRate.ts":"18","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getRateSaga.ts":"19","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getDynamicsRateSaga.ts":"20","/home/kostya/Документы/coding/react/TS/convertor/src/types/ACTypes.ts":"21","/home/kostya/Документы/coding/react/TS/convertor/src/components/InputElement/Input.tsx":"22"},{"size":533,"mtime":1608485176871,"results":"23","hashOfConfig":"24"},{"size":1026,"mtime":1616170738286,"results":"25","hashOfConfig":"24"},{"size":425,"mtime":1607279557881,"results":"26","hashOfConfig":"24"},{"size":677,"mtime":1614778291697,"results":"27","hashOfConfig":"24"},{"size":915,"mtime":1614690859353,"results":"28","hashOfConfig":"24"},{"size":1592,"mtime":1616336631564,"results":"29","hashOfConfig":"24"},{"size":2962,"mtime":1616182059790,"results":"30","hashOfConfig":"24"},{"size":865,"mtime":1607370004332,"results":"31","hashOfConfig":"24"},{"size":2211,"mtime":1616065261476,"results":"32","hashOfConfig":"24"},{"size":2858,"mtime":1616182117951,"results":"33","hashOfConfig":"24"},{"size":3300,"mtime":1616351129937,"results":"34","hashOfConfig":"24"},{"size":568,"mtime":1607668346351,"results":"35","hashOfConfig":"24"},{"size":581,"mtime":1607666189921,"results":"36","hashOfConfig":"24"},{"size":790,"mtime":1614967176010,"results":"37","hashOfConfig":"24"},{"size":1005,"mtime":1614684325597,"results":"38","hashOfConfig":"24"},{"size":1774,"mtime":1616336644663,"results":"39","hashOfConfig":"24"},{"size":347,"mtime":1614778405373,"results":"40","hashOfConfig":"24"},{"size":727,"mtime":1616229588182,"results":"41","hashOfConfig":"24"},{"size":1012,"mtime":1615051692470,"results":"42","hashOfConfig":"24"},{"size":640,"mtime":1615051575181,"results":"43","hashOfConfig":"24"},{"size":2121,"mtime":1616336669205,"results":"44","hashOfConfig":"24"},{"size":597,"mtime":1616318535682,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1tvuylf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kostya/Документы/coding/react/TS/convertor/src/index.tsx",[],["98","99"],"/home/kostya/Документы/coding/react/TS/convertor/src/App.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/reportWebVitals.ts",[],["100","101"],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/store.ts",[],["102","103"],"/home/kostya/Документы/coding/react/TS/convertor/src/api/api.ts",[],["104","105"],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorReducer.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/Rate/Rate.tsx",["106"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Html5Entities } from 'html-entities'\nimport './Rate.scss'\nimport { setRateSaga } from '../../redux/convertorAC'\n//components:\nimport { Calc } from '../Calc/Calc'\nimport { TableCurrency } from '../TableCurrency/TableCurrency'\n//types:\nimport { AppStateType } from '../../redux/store'\n\nexport const Rate: React.FC = () => {\n\n  const htmlEntities = new Html5Entities() \n\n  const dispatch = useDispatch()\n  const dateFromAPIRequest = useSelector((state: AppStateType) => state.convertorReducer.dateFromAPIRequest)\n  const currencyUsdEurForRub = useSelector((state: AppStateType) => state.convertorReducer.currencyUsdEurForRub)\n  const currencyListBaseRub = useSelector((state: AppStateType) => state.convertorReducer.currencyListBaseRub)\n  \n  useEffect(() => {\n    dispatch(setRateSaga())\n  }, [])\n\n  return (\n    <div className=\"rate\">\n      <div className=\"row\">\n        <div className=\"col-12 title\">\n          Курс валют на {dateFromAPIRequest}\n        </div>\n      </div>\n      <div className=\"row\">\n        {\n          dateFromAPIRequest !== '' &&\n          Object.keys(currencyUsdEurForRub).map(keyName => {\n            return (\n              <div className=\"col-12 col-lg-6\">\n                <div className=\"card card-flip h-100\">\n                  <div className=\"card-front text-white bg-dark\">\n                    <div className=\"card-body\">\n                        <i className=\"fa fa-search fa-5x float-right\"></i>\n                        <h3 className=\"card-title\">{htmlEntities.decode(keyName)}</h3>\n                        <div className=\"card-text\">{currencyUsdEurForRub[keyName].toFixed(2)}</div>\n                    </div>\n                  </div>\n                  <div className=\"card-back bg-dark text-white\">\n                    <div className=\"card-body\">\n                        <div className=\"card-text\">\n                          Exchange rates API is a free service for current and historical foreign exchange \n                          rates published by the European Central Bank\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 title\">Калькулятор обмена</div>\n        <Calc/>\n      </div>\n      <div className=\"row\">\n        {\n          Object.keys(currencyUsdEurForRub).length === 0 &&\n          <div className=\"col-12\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        }\n        <div className=\"col-12 title\">Курсы валют Европейского Центрального банка</div>\n          <TableCurrency currencyListBaseRub={currencyListBaseRub} />\n      </div>\n    </div>\n  )\n}\n\n\n","/home/kostya/Документы/coding/react/TS/convertor/src/components/CurrencyRow/CurrencyRow.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/Calc/Calc.tsx",["107"],"import React, { useEffect, useRef } from 'react' \nimport { useDispatch, useSelector } from 'react-redux'\nimport { getDynamicRateSaga, changeCountRUB } from '../../redux/convertorAC'\nimport './Calc.scss'\n//types: \nimport { AppStateType } from '../../redux/store'\n\nexport const Calc: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const currencyList = useSelector((state: AppStateType) => state.convertorReducer.currencyList)\n  const currentRUB =  useSelector((state: AppStateType) => state.convertorReducer.currentRUB)\n  const startValueForInput = useSelector((state: AppStateType) => state.convertorReducer.startValueForInput)\n  const countRUB = useSelector((state: AppStateType) => state.convertorReducer.countRUB)\n\n  // let inputRef = React.createRef<HTMLInputElement>()\n  let inputRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    dispatch(getDynamicRateSaga(Object.keys(currencyList)[0]))\n  },[currencyList])\n\n  const handlerInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value) {\n      const resultExchangeRate: number = +event.target.value * +currentRUB\n      dispatch(changeCountRUB(resultExchangeRate))\n    }\n  }\n\n  const handlerSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(changeCountRUB(0))\n    inputRef.current!.value = '1'\n    console.log(inputRef.current?.value)\n    dispatch(getDynamicRateSaga(event.target.value))\n  }\n\n  return (\n    <div className=\"calc-block\">\n      <div className=\"col-12\">\n        <div className=\"calc-input-select\">\n          <input \n            type=\"number\" \n            className=\"input\"\n            ref={inputRef}          \n            defaultValue={startValueForInput}\n            onChange={handlerInput} \n          />\n          <select onChange={handlerSelect}>\n            { \n              Object.keys(currencyList)\n                .filter(key => key !== 'RUB')\n                  .map(option => <option value={option} key={option}>{option}</option>)\n            }\n          </select>\n        </div>\n        <div className=\"show-rub\">\n          В Рублях: <strong>{countRUB === 0 ? currentRUB.toFixed(2) : countRUB.toFixed(2)}</strong>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n",["108","109"],"/home/kostya/Документы/coding/react/TS/convertor/src/components/TableCurrency/TableCurrency.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/HistoricalRates/HistoricalRates.tsx",["110"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport './formHistoricalRates.scss'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\n//components:\nimport { setHistoricalRateSaga, resetHistoricalRates, setLoader } from '../../redux/convertorAC'\n//components:\nimport { TableCurrency } from '../TableCurrency/TableCurrency'\n//types: \nimport { AppStateType } from '../../redux/store'\nimport { HistoricalFormDataType } from '../../types/HistoricalRateTypes'\nimport { Input } from '../InputElement/Input'\n\nexport const HistoricalRates: React.FC = () => {\n\n  const dispatch = useDispatch() \n\n  useEffect(() => {\n    dispatch(setLoader(false))\n    dispatch(resetHistoricalRates())  \n  }, [])\n\n  const listHistoricalRates = useSelector(((state: AppStateType) => state.convertorReducer.listHistoricalRates))\n  const load = useSelector(((state: AppStateType) => state.convertorReducer.load))\n\n  const history = useHistory()\n\n  const minDate = '1999-01-01'\n\n  const goMainPageHandler = () => {\n    dispatch(resetHistoricalRates())\n    history.push('/')\n  }\n      \n\n  return (\n    <div className=\"exchange-rate-date-content\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"title-historical-rate\">Курс валюты по указанной дате, начиная с 1999 года:</div>\n        </div>\n      </div>\n      <div className=\"row text-center\">\n        <div className=\"col-12\">\n          <Formik\n            initialValues={{\n              exchangeRateDate: ''\n            }}\n            validationSchema={Yup.object({\n              exchangeRateDate: Yup.date()\n                .min(minDate, `Дата начиная с ${minDate}`)\n                .required('Требуется указать дату')\n            })}\n            onSubmit={\n              (dataForm: HistoricalFormDataType): void => {\n                dispatch(setHistoricalRateSaga(dataForm.exchangeRateDate))\n                dispatch(setLoader(true))\n              }\n            }\n          >\n            <Form className=\"form-historical-rate\">\n              <div className=\"from-group\">\n                <Input\n                  id=\"exchangeRateDate\"\n                  type=\"text\"\n                  name=\"exchangeRateDate\"\n                  placeholder=\"Введите дату в формате: 2010-01-12\"\n                  autocomplete=\"off\"\n                />\n              </div>\n              <div className=\"add-action\">\n                {\n                  !load &&\n                  <button type=\"submit\" className=\"btn\">&#10147;</button>\n                }\n              </div>\n              <div className=\"loader\">\n                {\n                  load &&\n                  <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                }\n              </div>\n              <button className=\"btn btn-dark exit-historical\" onClick={goMainPageHandler}>Отмена</button>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n      {\n        listHistoricalRates &&\n        <div className=\"row\">\n          <TableCurrency currencyListBaseRub={listHistoricalRates} />\n        </div>\n      }\n    </div>\n  )\n}\n\n","/home/kostya/Документы/coding/react/TS/convertor/src/Validators/validate.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/FormControls/Input.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/About/About.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/NavbarComponent/NavbarComponent.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorAC.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/index.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getHistoricalRate.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getRateSaga.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getDynamicsRateSaga.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/types/ACTypes.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/InputElement/Input.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":23,"column":6,"nodeType":"123","endLine":23,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":21,"column":5,"nodeType":"123","endLine":21,"endColumn":19,"suggestions":"125"},{"ruleId":"111","replacedBy":"126"},{"ruleId":"113","replacedBy":"127"},{"ruleId":"121","severity":1,"message":"122","line":23,"column":6,"nodeType":"123","endLine":23,"endColumn":8,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],["129"],["130"],["129"],["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["131"],["132"],["129"],["130"],["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"134","fix":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},"Update the dependencies array to be: [currencyList, dispatch]",{"range":"141","text":"142"},{"range":"143","text":"140"},[895,897],"[dispatch]",[917,931],"[currencyList, dispatch]",[790,792]]