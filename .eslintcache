[{"/home/kostya/Документы/coding/react/TS/convertor/src/index.tsx":"1","/home/kostya/Документы/coding/react/TS/convertor/src/App.tsx":"2","/home/kostya/Документы/coding/react/TS/convertor/src/reportWebVitals.ts":"3","/home/kostya/Документы/coding/react/TS/convertor/src/redux/store.ts":"4","/home/kostya/Документы/coding/react/TS/convertor/src/api/api.ts":"5","/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorReducer.ts":"6","/home/kostya/Документы/coding/react/TS/convertor/src/components/Rate/Rate.tsx":"7","/home/kostya/Документы/coding/react/TS/convertor/src/components/CurrencyRow/CurrencyRow.tsx":"8","/home/kostya/Документы/coding/react/TS/convertor/src/components/Calc/Calc.tsx":"9","/home/kostya/Документы/coding/react/TS/convertor/src/components/TableCurrency/TableCurrency.tsx":"10","/home/kostya/Документы/coding/react/TS/convertor/src/components/HistoricalRates/HistoricalRates.tsx":"11","/home/kostya/Документы/coding/react/TS/convertor/src/components/HistoricalRates/FormHistoricalRates.tsx":"12","/home/kostya/Документы/coding/react/TS/convertor/src/Validators/validate.ts":"13","/home/kostya/Документы/coding/react/TS/convertor/src/FormControls/Input.tsx":"14","/home/kostya/Документы/coding/react/TS/convertor/src/components/About/About.tsx":"15","/home/kostya/Документы/coding/react/TS/convertor/src/components/NavbarComponent/NavbarComponent.tsx":"16","/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorAC.ts":"17","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/index.ts":"18","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getHistoricalRate.ts":"19","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getRateSaga.ts":"20","/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getDynamicsRateSaga.ts":"21","/home/kostya/Документы/coding/react/TS/convertor/src/types/ACTypes.ts":"22"},{"size":533,"mtime":1608485176871,"results":"23","hashOfConfig":"24"},{"size":1024,"mtime":1614683981717,"results":"25","hashOfConfig":"24"},{"size":425,"mtime":1607279557881,"results":"26","hashOfConfig":"24"},{"size":677,"mtime":1614778291697,"results":"27","hashOfConfig":"24"},{"size":915,"mtime":1614690859353,"results":"28","hashOfConfig":"24"},{"size":1568,"mtime":1615051386367,"results":"29","hashOfConfig":"24"},{"size":3139,"mtime":1615038365843,"results":"30","hashOfConfig":"24"},{"size":865,"mtime":1607370004332,"results":"31","hashOfConfig":"24"},{"size":2298,"mtime":1615038512138,"results":"32","hashOfConfig":"24"},{"size":2881,"mtime":1614689054227,"results":"33","hashOfConfig":"24"},{"size":1828,"mtime":1615039500904,"results":"34","hashOfConfig":"24"},{"size":1686,"mtime":1615039459760,"results":"35","hashOfConfig":"24"},{"size":568,"mtime":1607668346351,"results":"36","hashOfConfig":"24"},{"size":581,"mtime":1607666189921,"results":"37","hashOfConfig":"24"},{"size":790,"mtime":1614967176010,"results":"38","hashOfConfig":"24"},{"size":1005,"mtime":1614684325597,"results":"39","hashOfConfig":"24"},{"size":1773,"mtime":1615051485844,"results":"40","hashOfConfig":"24"},{"size":347,"mtime":1614778405373,"results":"41","hashOfConfig":"24"},{"size":727,"mtime":1615051604849,"results":"42","hashOfConfig":"24"},{"size":1012,"mtime":1615051692470,"results":"43","hashOfConfig":"24"},{"size":640,"mtime":1615051575181,"results":"44","hashOfConfig":"24"},{"size":2157,"mtime":1615051277423,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1tvuylf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kostya/Документы/coding/react/TS/convertor/src/index.tsx",[],["100","101"],"/home/kostya/Документы/coding/react/TS/convertor/src/App.tsx",[],["102","103"],"/home/kostya/Документы/coding/react/TS/convertor/src/reportWebVitals.ts",[],["104","105"],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/store.ts",[],["106","107"],"/home/kostya/Документы/coding/react/TS/convertor/src/api/api.ts",[],["108","109"],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorReducer.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/Rate/Rate.tsx",["110"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Html5Entities } from 'html-entities'\nimport './Rate.scss'\nimport { setRateSaga } from '../../redux/convertorAC'\n//components:\nimport Calc from '../Calc/Calc'\nimport TableCurrency from '../TableCurrency/TableCurrency'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { RateTypes, RateStatePropsType } from '../../types/RateTypes'\n\nconst Rate: React.FC<RateTypes> = props => {\n\n  const htmlEntities = new Html5Entities() \n\n  useEffect(() => {\n    props.setRateSaga()\n  }, [])\n\n  return (\n    <div className=\"rate\">\n      <div className=\"row\">\n        <div className=\"col-12 title\">\n          Курс валют на {props.dateFromAPIRequest}\n        </div>\n      </div>\n      <div className=\"row\">\n        {\n          props.dateFromAPIRequest !== '' &&\n          Object.keys(props.currencyUsdEurForRub).map(keyName => {\n            return (\n              <div className=\"col-12 col-lg-6\">\n                <div className=\"card card-flip h-100\">\n                  <div className=\"card-front text-white bg-dark\">\n                    <div className=\"card-body\">\n                        <i className=\"fa fa-search fa-5x float-right\"></i>\n                        <h3 className=\"card-title\">{htmlEntities.decode(keyName)}</h3>\n                        <div className=\"card-text\">{props.currencyUsdEurForRub[keyName].toFixed(2)}</div>\n                    </div>\n                  </div>\n                  <div className=\"card-back bg-dark text-white\">\n                    <div className=\"card-body\">\n                        <div className=\"card-text\">\n                          Exchange rates API is a free service for current and historical foreign exchange \n                          rates published by the European Central Bank\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 title\">Калькулятор обмена</div>\n        <Calc/>\n      </div>\n      <div className=\"row\">\n        {\n          Object.keys(props.currencyUsdEurForRub).length === 0 &&\n          <div className=\"col-12\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        }\n        <div className=\"col-12 title\">Курсы валют Европейского Центрального банка</div>\n        <TableCurrency currencyListBaseRub={props.currencyListBaseRub} />\n      </div>\n    </div>\n  )\n}\nlet mapStateToProps = (state: AppStateType): RateStatePropsType => {\n  return {\n    dateFromAPIRequest: state.convertorReducer.dateFromAPIRequest,\n    currencyUsdEurForRub: state.convertorReducer.currencyUsdEurForRub,\n    baseCurrencyFromAPIRequest: state.convertorReducer.baseCurrencyFromAPIRequest,\n    currencyListBaseRub: state.convertorReducer.currencyListBaseRub\n  }\n}\n\nconst connector = connect(mapStateToProps, { setRateSaga })\nexport default connector(Rate)","/home/kostya/Документы/coding/react/TS/convertor/src/components/CurrencyRow/CurrencyRow.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/Calc/Calc.tsx",["111"],"import React, { useEffect, useRef } from 'react' \nimport { connect } from 'react-redux'\nimport { getDynamicRateSaga, changeCountRUB } from '../../redux/convertorAC'\nimport './Calc.scss'\n//types: \nimport { AppStateType } from '../../redux/store'\nimport { CalcTypes, CalcStatePropsType } from '../../types/CalcTypes'\n\nconst Calc: React.FC<CalcTypes> = props => {\n\n  // let inputRef = React.createRef<HTMLInputElement>()\n  let inputRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    props.getDynamicRateSaga(Object.keys(props.currencyList)[0])\n  },[props.currencyList])\n\n  const handlerInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value) {\n      const resultExchangeRate: number = +event.target.value * +props.currentRUB\n      props.changeCountRUB(resultExchangeRate)\n    }\n  }\n\n  const handlerSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    props.changeCountRUB(0)\n    inputRef.current!.value = '1'\n    console.log(inputRef.current?.value)\n    props.getDynamicRateSaga(event.target.value)\n  }\n\n  return (\n    <div className=\"calc-block\">\n      <div className=\"col-12\">\n        <div className=\"calc-input-select\">\n          <input \n            type=\"number\" \n            className=\"input\"\n            ref={inputRef}          \n            defaultValue={props.startValueForInput}\n            onChange={handlerInput} \n          />\n          <select onChange={handlerSelect}>\n            { \n              Object.keys(props.currencyList)\n                .filter(key => key !== 'RUB')\n                  .map(option => <option value={option} key={option}>{option}</option>)\n            }\n          </select>\n        </div>\n        <div className=\"show-rub\">\n          В Рублях: <strong>{props.countRUB === 0 ? props.currentRUB.toFixed(2) : props.countRUB.toFixed(2)}</strong>\n        </div>\n      </div>\n    </div>\n  )\n}\nlet mapStateToProps = (state: AppStateType): CalcStatePropsType => {\n  return {\n    currencyList: state.convertorReducer.currencyList,\n    currentRUB: state.convertorReducer.currentRUB,\n    startValueForInput: state.convertorReducer.startValueForInput,\n    countRUB: state.convertorReducer.countRUB\n  }\n}\nconst connector = connect(mapStateToProps, { getDynamicRateSaga, changeCountRUB })\nexport default connector(Calc)\n","/home/kostya/Документы/coding/react/TS/convertor/src/components/TableCurrency/TableCurrency.tsx",[],["112","113"],"/home/kostya/Документы/coding/react/TS/convertor/src/components/HistoricalRates/HistoricalRates.tsx",["114"],"import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport './formHistoricalRates.scss'\n//components:\nimport Form from './FormHistoricalRates'\nimport { setHistoricalRateSaga, resetHistoricalRates, setLoader } from '../../redux/convertorAC'\n//components:\nimport TableCurrency from '../TableCurrency/TableCurrency'\n//types: \nimport { AppStateType } from '../../redux/store'\nimport { HistoricalRatesType, HistoricalRatesPropsType, HistoricalFormDataType } from '../../types/HistoricalRateTypes'\n\nconst HistoricalRates: React.FC<HistoricalRatesType> = props => {\n\n  useEffect(() => {\n    props.resetHistoricalRates()\n  }, [])\n\n  const history = useHistory()\n\n  const resetExchangeRateDate = () => {\n    props.resetHistoricalRates()\n    history.push('/') \n  }\n\n  const onSubmit = (dataForm: HistoricalFormDataType): void => {\n    props.setHistoricalRateSaga(dataForm.exchangeRateDate)\n    props.setLoader(true)\n  }\n  \n  return (\n    <div className=\"historical-rate-base\">\n      <div className=\"row text-center\">\n        <div className=\"col-12\">\n          <Form \n            onSubmit={onSubmit} \n            resetExchangeRateDate={resetExchangeRateDate}\n            load={props.load}\n          />\n        </div>\n      </div>\n      { \n        props.listHistoricalRates &&\n        <div className=\"row\">\n          <TableCurrency currencyListBaseRub={props.listHistoricalRates} />\n        </div>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): HistoricalRatesPropsType => {\n  return {\n    listHistoricalRates: state.convertorReducer.listHistoricalRates,\n    load: state.convertorReducer.load\n  }\n}\nconst connector = connect(mapStateToProps, { setHistoricalRateSaga, resetHistoricalRates, setLoader })\nexport default connector(HistoricalRates)","/home/kostya/Документы/coding/react/TS/convertor/src/components/HistoricalRates/FormHistoricalRates.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/Validators/validate.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/FormControls/Input.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/About/About.tsx",[],"/home/kostya/Документы/coding/react/TS/convertor/src/components/NavbarComponent/NavbarComponent.tsx",[],["115","116"],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/convertorAC.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/index.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getHistoricalRate.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getRateSaga.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/redux/saga/getDynamicsRateSaga.ts",[],"/home/kostya/Документы/coding/react/TS/convertor/src/types/ACTypes.ts",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"117","replacedBy":"123"},{"ruleId":"119","replacedBy":"124"},{"ruleId":"117","replacedBy":"125"},{"ruleId":"119","replacedBy":"126"},{"ruleId":"117","replacedBy":"127"},{"ruleId":"119","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":19,"column":6,"nodeType":"131","endLine":19,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"130","line":16,"column":5,"nodeType":"131","endLine":16,"endColumn":25,"suggestions":"133"},{"ruleId":"117","replacedBy":"134"},{"ruleId":"119","replacedBy":"135"},{"ruleId":"129","severity":1,"message":"130","line":18,"column":6,"nodeType":"131","endLine":18,"endColumn":8,"suggestions":"136"},{"ruleId":"117","replacedBy":"137"},{"ruleId":"119","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],["139"],["140"],["139"],["140"],["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["141"],["142"],["139"],["140"],["143"],["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"144","fix":"148"},"Update the dependencies array to be: [props]",{"range":"149","text":"150"},"Update the dependencies array to be: [props, props.currencyList]",{"range":"151","text":"152"},{"range":"153","text":"150"},[574,576],"[props]",[556,576],"[props, props.currencyList]",[689,691]]